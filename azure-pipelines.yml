jobs:

- job: buildandtest
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: NodeTool@0 
    inputs:
      versionSpec: '8.x'

  - task: Npm@1
    inputs:
      command: 'install'

  - task: Npm@1
    inputs:
      command: 'custom'
      customCommand: 'test'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testRunner: JUnit
      testResultsFiles: '**/TEST-RESULTS.xml'

  - task: PublishCodeCoverageResults@1
    inputs: 
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      includeRootFolder: false

  - task: PublishBuildArtifacts@1

  # the following will publish an artifact called drop 




#  - task: AzureRmWebAppDeployment@3
#    displayName: 'Deploy Azure App Service'
#    inputs:
#      azureSubscription: 'pip-js-mre - Azure'
#      WebAppName: 'dev-pip-js-mre'
#      Package: '$(System.ArtifactsDirectory)\**\*.zip'
#      GenerateWebConfig: true
#      WebConfigParameters: '-Handler iisnode -NodeStartFile server.js -appType node'
#      TakeAppOfflineFlag: true
#      UseWebDeploy: true
#      RenameFilesFlag: true


  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'pip-js-mre - Azure'
      appType: 'webApp'
      WebAppName: 'dev-pip-js-mre'
      packageForLinux: '$(System.ArtifactsDirectory)/**/*.zip'
      WebConfigParameters: '''-Handler iisnode -NodeStartFile server.js -appType node'''
      enableCustomDeployment: true
      DeploymentType: 'webDeploy'

  # test something, like UI Tests or something

- job: prod
  pool:
    vmImage: 'ubuntu-16.04'
  dependsOn: buildandtest
  condition: succeeded()
  steps:

  # step to download the artifacts from the previous job
  - task: DownloadBuildArtifacts@0
    inputs:
      artifactName: drop

  - task: AzureRmWebAppDeployment@3
    inputs:
      azureSubscription: 'pip-js-mre - Azure'
      WebAppName: 'pip-js-mre'
      Package: '$(System.DefaultWorkingDirectory)\**\drop\*.zip'
      GenerateWebConfig: true
      WebConfigParameters: '-Handler iisnode -NodeStartFile server.js -appType node'
      TakeAppOfflineFlag: true
      UseWebDeploy: true
      RenameFilesFlag: true
